/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.doktor;

import controler.Controller;
import domain.Doktor;
import domain.VrstaSpecijaliste;
import form.FormMode;
import java.io.IOException;
import java.net.SocketException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sesion.Session;
import thread.MojInterfejs;
import thread.ThreadClock;

/**
 *
 * @author Rastko
 */
public class FormDoktor extends javax.swing.JDialog implements MojInterfejs{

    private Doktor doktorSaForme;

    /**
     * Creates new form FormDoktor
     */
    private Thread thc;
    public FormDoktor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            lblTrenutniKorisnik.setText("Trenutni korisnik:" + Session.getCurrentUser().getFirstName() + " " + Session.getCurrentUser().getLastName());
            populateCmbVrstaSpecijaliste();
            thc = new ThreadClock(txtClock);
            thc.start();
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            Session.getInstance().getThread().setMojInterfejs(this);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public FormDoktor(java.awt.Frame parent, boolean modal, FormMode mode) {
        this(parent, modal);
        changeMode(mode);
    }

    public FormDoktor(java.awt.Frame parent, boolean modal, FormMode mode, Doktor doktor) {
        this(parent, modal, mode);
        doktorSaForme = doktor;
        popuniFormu(doktor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTrenutniKorisnik = new javax.swing.JLabel();
        txtClock = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblDoktorId = new javax.swing.JLabel();
        lblIme = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        lblBrojTelefona = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblVrstaSpecijaliste = new javax.swing.JLabel();
        txtDoktorId = new javax.swing.JTextField();
        txtDoktorIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtBrojTelefona = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        cmbVrstaSpecijaliste = new javax.swing.JComboBox<>();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnAzuriraj = new javax.swing.JButton();
        btnIzbrisi = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblBrojOrdinacije = new javax.swing.JLabel();
        txtBrojOrdinacije = new javax.swing.JTextField();
        lblSetVrsta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        lblTrenutniKorisnik.setText("jLabel1");

        txtClock.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTrenutniKorisnik)
                    .addComponent(txtClock))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTrenutniKorisnik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtClock)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblDoktorId.setText("ID:");

        lblIme.setText("Ime:");

        lblPrezime.setText("Prezime:");

        lblBrojTelefona.setText("Broj Telefona:");

        lblEmail.setText("Email:");

        lblVrstaSpecijaliste.setText("Vrsta specijaliste:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnAzuriraj.setText("Azuriraj");
        btnAzuriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzurirajActionPerformed(evt);
            }
        });

        btnIzbrisi.setText("Izbrisi");
        btnIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbrisiActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblBrojOrdinacije.setText("Broj ordinacije:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblVrstaSpecijaliste)
                                .addGap(18, 18, 18)
                                .addComponent(cmbVrstaSpecijaliste, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSacuvaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIzmeni)
                                .addGap(18, 18, 18)
                                .addComponent(btnAzuriraj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIzbrisi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancel)
                                .addGap(0, 38, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(lblSetVrsta))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblBrojOrdinacije)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtBrojOrdinacije, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblDoktorId)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDoktorId))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblIme)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDoktorIme))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblPrezime)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtPrezime))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblBrojTelefona)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtBrojTelefona))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblEmail)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmail))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoktorId)
                    .addComponent(txtDoktorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(txtDoktorIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrojTelefona)
                    .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrojOrdinacije)
                    .addComponent(txtBrojOrdinacije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVrstaSpecijaliste)
                    .addComponent(cmbVrstaSpecijaliste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(lblSetVrsta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnAzuriraj)
                    .addComponent(btnIzbrisi)
                    .addComponent(btnCancel))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAzurirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzurirajActionPerformed
        try {
            long doktorId = Long.parseLong(txtDoktorId.getText().trim());
            String ime = txtDoktorIme.getText().trim();
            String prezime = txtPrezime.getText().trim();
            String brojTelefona = txtBrojTelefona.getText().trim();
            String email = txtEmail.getText().trim();
            int brojOrdinacije = Integer.parseInt(txtBrojOrdinacije.getText().trim());
            VrstaSpecijaliste vrstaSpecijaliste = (VrstaSpecijaliste) cmbVrstaSpecijaliste.getSelectedItem();
            Doktor dok = new Doktor(doktorId, ime, prezime, brojTelefona, email, brojOrdinacije, vrstaSpecijaliste);
            if (Controller.getInstance().updateDoktor(dok)) {
                JOptionPane.showMessageDialog(rootPane, "Uspesno izmenjen doktor");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Doktor nije izmenjen");
            }

        } catch (Exception e) {
            if (e instanceof SocketException) {
                endProgram();
            } if(e instanceof NumberFormatException)
                JOptionPane.showMessageDialog(rootPane, "Uneli ste slovo ili slova umesto broja ordinacije");
            else{
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnAzurirajActionPerformed

    public void endProgram(){
        JOptionPane.showMessageDialog(rootPane, "Server vam je prekinuo konekciju");
        this.dispose();      
        System.exit(0);

    }
        
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        thc.interrupt();
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        changeMode(FormMode.Edit);
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            String ime = txtDoktorIme.getText().trim();
            String prezime = txtPrezime.getText().trim();
            String brojTelefona = txtBrojTelefona.getText().trim();
            String email = txtEmail.getText().trim();
            VrstaSpecijaliste vrstaSpecijaliste = (VrstaSpecijaliste) cmbVrstaSpecijaliste.getSelectedItem();
            int brojOrdinacije = Integer.parseInt(txtBrojOrdinacije.getText().trim());
            if (ime == null || prezime == null || brojTelefona == null) {
                JOptionPane.showMessageDialog(rootPane, "Niste uneli sve potrebne podatke");
            } else {
                Doktor dok = new Doktor(ime, prezime, brojTelefona, email, brojOrdinacije, vrstaSpecijaliste);
                if (Controller.getInstance().addDoktor(dok)) {
                    JOptionPane.showMessageDialog(rootPane, "Uspesno unet doktor");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Lekar nije unet");
                }
            }
        } catch (Exception e) {
            if (e instanceof SocketException) {
                endProgram();
            } if(e instanceof NumberFormatException)
                JOptionPane.showMessageDialog(rootPane, "Uneli ste slovo ili slova umesto broja ordinacije");
            else{
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzbrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbrisiActionPerformed
        try {
            long id = Long.parseLong(txtDoktorId.getText().trim());
            int k = JOptionPane.showConfirmDialog(rootPane, "Da li ste sigurni da zelite da obrisete doktora");
            if (Controller.getInstance().deleteDoktor(id) && k == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "Uspesno izbrisan doktor");
                this.dispose();
            }
        } catch (Exception ex) {
            if (ex instanceof SocketException) {
                endProgram();
            } else {
                JOptionPane.showConfirmDialog(rootPane, ex.getMessage());
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnIzbrisiActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        try {
            Session.getInstance().getThread().setMojInterfejs(this);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAzuriraj;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnIzbrisi;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Object> cmbVrstaSpecijaliste;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBrojOrdinacije;
    private javax.swing.JLabel lblBrojTelefona;
    private javax.swing.JLabel lblDoktorId;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblSetVrsta;
    private javax.swing.JLabel lblTrenutniKorisnik;
    private javax.swing.JLabel lblVrstaSpecijaliste;
    private javax.swing.JTextField txtBrojOrdinacije;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JLabel txtClock;
    private javax.swing.JTextField txtDoktorId;
    private javax.swing.JTextField txtDoktorIme;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void changeMode(FormMode mode) {
        switch (mode) {
            case Create:
                txtBrojTelefona.setEditable(true);
                txtDoktorId.setEditable(false);
                txtDoktorIme.setEditable(true);
                txtEmail.setEditable(true);
                txtPrezime.setEditable(true);
                txtBrojOrdinacije.setEditable(true);
                btnAzuriraj.setVisible(false);
                btnCancel.setVisible(true);
                btnIzbrisi.setVisible(false);
                btnIzmeni.setVisible(false);
                btnSacuvaj.setVisible(true);
                cmbVrstaSpecijaliste.setEditable(true);
                break;
            case Delete:
                txtBrojTelefona.setEditable(false);
                txtDoktorId.setEditable(false);
                txtDoktorIme.setEditable(false);
                txtEmail.setEditable(false);
                txtPrezime.setEditable(false);
                txtBrojOrdinacije.setEditable(false);
                btnAzuriraj.setVisible(false);
                btnCancel.setVisible(true);
                btnIzbrisi.setVisible(true);
                btnIzmeni.setVisible(false);
                btnSacuvaj.setVisible(false);
                cmbVrstaSpecijaliste.setEditable(true);
                break;
            case Edit:
                txtBrojTelefona.setEditable(true);
                txtDoktorId.setEditable(false);
                txtDoktorIme.setEditable(true);
                txtEmail.setEditable(true);
                txtPrezime.setEditable(true);
                txtBrojOrdinacije.setEditable(true);
                btnAzuriraj.setVisible(true);
                btnCancel.setVisible(true);
                btnIzbrisi.setVisible(false);
                btnIzmeni.setVisible(false);
                btnSacuvaj.setVisible(false);
                cmbVrstaSpecijaliste.setEditable(true);
                break;
            case View:
                txtBrojTelefona.setEditable(false);
                txtDoktorId.setEditable(false);
                txtDoktorIme.setEditable(false);
                txtEmail.setEditable(false);
                txtPrezime.setEditable(false);
                txtBrojOrdinacije.setEditable(false);
                btnAzuriraj.setVisible(false);
                btnCancel.setVisible(true);
                btnIzbrisi.setVisible(true);
                btnIzmeni.setVisible(true);
                btnSacuvaj.setVisible(false);
                cmbVrstaSpecijaliste.setEditable(false);
                break;
        }
    }

    private void populateCmbVrstaSpecijaliste() {
        try {
            cmbVrstaSpecijaliste.removeAllItems();
            for (VrstaSpecijaliste vr : Controller.getInstance().getAllVrstaSpecijaliste()) {
                cmbVrstaSpecijaliste.addItem(vr);
            }
        } catch (Exception ex) {
            if (ex instanceof SocketException) {
                endProgram();
            } else {
                System.out.println("Greska u populateCmbVrstaSpecijaliste");
                System.out.println(ex.getMessage());
                ex.printStackTrace();
            }
        }
    }

    private void popuniFormu(Doktor doktor) {
        txtBrojOrdinacije.setText(Integer.toString(doktor.getBrojOrdinacije()));
        txtBrojTelefona.setText(doktor.getBrojTelefona());
        txtDoktorId.setText(Long.toString(doktor.getDoktorId()));
        txtDoktorIme.setText(doktor.getIme());
        txtEmail.setText(doktor.getEmail());
        txtPrezime.setText(doktor.getPrezime());
        lblSetVrsta.setText(doktor.getVrstaSpecijaliste().toString());

    }

}
